<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BuT的博客</title>
  
  <subtitle>不要因为路远而不走 只有走就能走得到 不要因为石重而不搬 只要搬就能搬得动</subtitle>
  <link href="http://bigtrex.top/atom.xml" rel="self"/>
  
  <link href="http://bigtrex.top/"/>
  <updated>2022-08-06T08:52:17.904Z</updated>
  <id>http://bigtrex.top/</id>
  
  <author>
    <name>BuT</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>bs4方法自查</title>
    <link href="http://bigtrex.top/bs4%E6%96%B9%E6%B3%95%E8%87%AA%E6%9F%A5/"/>
    <id>http://bigtrex.top/bs4%E6%96%B9%E6%B3%95%E8%87%AA%E6%9F%A5/</id>
    <published>2022-08-05T07:52:39.000Z</published>
    <updated>2022-08-06T08:52:17.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bs4库方法自查"><a href="#bs4库方法自查" class="headerlink" title="bs4库方法自查"></a>bs4库方法自查</h1><p>Beautiful Soup库是解析、遍历、维护“标签树”的功能库</p><h2 id="BeautifulSoup使用方法"><a href="#BeautifulSoup使用方法" class="headerlink" title="BeautifulSoup使用方法"></a>BeautifulSoup使用方法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> bs4</span><br><span class="line"></span><br><span class="line">soup=BeautifulSoup(&lt;html&gt;response.text&lt;/html&gt;,<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">soup=BeautifulSoup(<span class="built_in">open</span>(<span class="string">&#x27;*.html&#x27;</span>,<span class="string">&#x27;r&#x27;</span>),<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="BeautifulSoup类基本元素"><a href="#BeautifulSoup类基本元素" class="headerlink" title="BeautifulSoup类基本元素"></a>BeautifulSoup类基本元素</h2><table><thead><tr><th align="center">基本元素</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">Tag</td><td align="center">标签，以&lt;&gt;…&lt;&#x2F;&gt;组成</td></tr><tr><td align="center">Name</td><td align="center">标签名，&lt;p&gt;…&lt;&#x2F;p&gt;的名字是p：&lt;tag&gt;.name</td></tr><tr><td align="center">Attributes</td><td align="center">标签的属性，字典形式组织：<tag>.attrs</tag></td></tr><tr><td align="center">NavigableString</td><td align="center">标签内非属性字符串，标签下只能有一个子节点：<tag>.string，返回NavigableString</tag></td></tr><tr><td align="center">text</td><td align="center">标签内字符串，可跨域层级：<tag>.text，返回str</tag></td></tr><tr><td align="center">Comment</td><td align="center">标签内字符串的注释部分：<tag>.string</tag></td></tr></tbody></table><p><a href="https://blog.csdn.net/weixin_30352645/article/details/99390523?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522165976942216782390551621%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=165976942216782390551621&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-2-99390523-null-null.142%5Ev39%5Epc_rank_v37,185%5Ev2%5Econtrol&utm_term=bs4%E7%9A%84string%E5%92%8Ctext&spm=1018.2226.3001.4187">text和string的区别</a></p><h2 id="BeautifulSoup类常用方法"><a href="#BeautifulSoup类常用方法" class="headerlink" title="BeautifulSoup类常用方法"></a>BeautifulSoup类常用方法</h2><p>一篇总结bs4非常相近且准确的blog</p><p><a href="https://www.cnblogs.com/gl1573/p/9480022.html">bs4方法详情</a></p><p><img src="/bs4%E6%96%B9%E6%B3%95%E8%87%AA%E6%9F%A5/bottom.png" alt="bottom"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;bs4库方法自查&quot;&gt;&lt;a href=&quot;#bs4库方法自查&quot; class=&quot;headerlink&quot; title=&quot;bs4库方法自查&quot;&gt;&lt;/a&gt;bs4库方法自查&lt;/h1&gt;&lt;p&gt;Beautiful Soup库是解析、遍历、维护“标签树”的功能库&lt;/p&gt;
&lt;h2 id=&quot;</summary>
      
    
    
    
    <category term="爬虫" scheme="http://bigtrex.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>爬虫中文乱码</title>
    <link href="http://bigtrex.top/%E7%88%AC%E8%99%AB%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>http://bigtrex.top/%E7%88%AC%E8%99%AB%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</id>
    <published>2022-08-05T03:01:51.000Z</published>
    <updated>2022-08-05T03:57:02.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="爬虫中文乱码"><a href="#爬虫中文乱码" class="headerlink" title="爬虫中文乱码"></a>爬虫中文乱码</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;爬虫中文乱码&quot;&gt;&lt;a href=&quot;#爬虫中文乱码&quot; class=&quot;headerlink&quot; title=&quot;爬虫中文乱码&quot;&gt;&lt;/a&gt;爬虫中文乱码&lt;/h1&gt;</summary>
      
    
    
    
    <category term="爬虫" scheme="http://bigtrex.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>关于MD锚点的坑</title>
    <link href="http://bigtrex.top/%E5%85%B3%E4%BA%8EMD%E9%94%9A%E7%82%B9%E7%9A%84%E5%9D%91/"/>
    <id>http://bigtrex.top/%E5%85%B3%E4%BA%8EMD%E9%94%9A%E7%82%B9%E7%9A%84%E5%9D%91/</id>
    <published>2022-08-04T11:15:44.000Z</published>
    <updated>2022-08-04T12:19:56.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于MD锚点的坑"><a href="#关于MD锚点的坑" class="headerlink" title="关于MD锚点的坑"></a>关于MD锚点的坑</h1><p>锚点是一个方便定位的东西，用起来还是很香的</p><p>但是不同MarkDown对锚点的解释都有些许区别，导致不同平台上锚点可能会失效</p><p>MarkDown中对于锚点的语法定义如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">描述</span>](<span class="link">#定位的title</span>)</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="section"># 定位的Title</span></span><br></pre></td></tr></table></figure><p>多级标题都可以作为’定位的title’，另外标题中大写字母会自动转为小写字母</p><p><a href="#for-example">For Example</a></p><p>…</p><p>…</p><p>…</p><p>…</p><p>…</p><h2 id="For-Example"><a href="#For-Example" class="headerlink" title="For Example"></a>For Example</h2><p>这样的锚点在vscode这样的编辑器上是没有问题的，但是放到如github，csdn上会失效</p><p>代码如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">For Example</span>](<span class="link">#for-example</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">## For Example</span></span><br></pre></td></tr></table></figure><p>对于hexo+github搭建的博客，这样的锚点失效在于#后的内容和标题不一致，主要在于英文大小写，中文不存在如上问题</p><p>修改为如下的代码，在hexo+github上可以实现锚点，然而对于vscode这样的编辑器当然失效了，另外这样的锚点在csdn上也会失效</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">For Example2</span>](<span class="link">#For-Example2</span>)</span><br><span class="line"></span><br><span class="line"><span class="section">## For Example2</span></span><br></pre></td></tr></table></figure><p><a href="#For-Example2">For Example2</a></p><p>…</p><p>…</p><p>…</p><p>…</p><p>…</p><h2 id="For-Example2"><a href="#For-Example2" class="headerlink" title="For Example2"></a>For Example2</h2><p>目前来看纯MarkDown语法的锚点总会存在一些坑，一个通用解决方法是配合html中锚点的使用，代码如下：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">点击跳转到For Example3</span>](<span class="link">#Test</span>)</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;Test&quot;</span>&gt;</span></span>For Example3<span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>其中id值只支持英文，id值和#后的值完全一致，不支持id值包含空格</p><p>当然，这样的代码并非按照MarkDown的思想直接将标题作为锚点的定位点，但是这样的锚点在vscode，github，csdn上都可以<strong>work！</strong></p><p><a href="#Test">点击跳转到For Example3</a></p><p>…</p><p>…</p><p>…</p><p>…</p><p>…</p><p>…</p><p>…</p><p><a id="Test">For Example3</a></p><p>…</p><p>…</p><p>…</p><p>…</p><p>…</p><p><img src="/%E5%85%B3%E4%BA%8EMD%E9%94%9A%E7%82%B9%E7%9A%84%E5%9D%91/bottom.png" alt="bottom"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;关于MD锚点的坑&quot;&gt;&lt;a href=&quot;#关于MD锚点的坑&quot; class=&quot;headerlink&quot; title=&quot;关于MD锚点的坑&quot;&gt;&lt;/a&gt;关于MD锚点的坑&lt;/h1&gt;&lt;p&gt;锚点是一个方便定位的东西，用起来还是很香的&lt;/p&gt;
&lt;p&gt;但是不同MarkDown对锚点的解</summary>
      
    
    
    
    <category term="MarkDown" scheme="http://bigtrex.top/categories/MarkDown/"/>
    
    
  </entry>
  
  <entry>
    <title>Python正则表达式自查</title>
    <link href="http://bigtrex.top/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%87%AA%E6%9F%A5/"/>
    <id>http://bigtrex.top/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%87%AA%E6%9F%A5/</id>
    <published>2022-08-03T12:30:07.000Z</published>
    <updated>2022-08-04T13:09:56.060Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python正则表达式自查"><a href="#Python正则表达式自查" class="headerlink" title="Python正则表达式自查"></a>Python正则表达式自查</h1><ul><li>正则表达式是一种针对字符串表达“简洁”和“特征”思想的工具</li><li>正则表达式可以用来判断某字符串的特征归属</li><li>正则表达式语法由字符和操作符构成</li></ul><p><a href="#python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E4%BD%BF%E7%94%A8">1. Python正则表达式使用</a></p><p><a href="#python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95">2. Python正则表达式语法</a></p><p><a href="#regex%E5%BA%93%E6%96%B9%E6%B3%95">3. Regex库方法</a></p><p><a href="#match%E5%AF%B9%E8%B1%A1">4. Match对象</a></p><p><a href="#%E8%B4%AA%E5%A9%AA%E5%8C%B9%E9%85%8D%E5%92%8C%E6%9C%80%E5%B0%8F%E5%8C%B9%E9%85%8D">5. 贪婪匹配和最小匹配</a></p><p><a href="#%E5%AE%9E%E4%BE%8B">6. 实例</a></p><h2 id="python正则表达式使用"><a href="#python正则表达式使用" class="headerlink" title="python正则表达式使用"></a>python正则表达式使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不需要对转义符进行转义的原生字符串类型，直接表达一个正则表达式</span></span><br><span class="line"><span class="string">r&#x27;text&#x27;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 两种用法</span></span><br><span class="line">rst = re.search(<span class="string">r&#x27;[1‐9]\d&#123;5&#125;&#x27;</span>, <span class="string">&#x27;BIT 100081&#x27;</span>)</span><br><span class="line"><span class="comment"># compile方法可以使用原生字符串或字符串</span></span><br><span class="line">pat = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[1‐9]\d&#123;5&#125;&#x27;</span>)</span><br><span class="line">rst = pat.search(<span class="string">&#x27;BIT 100081&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> rst:</span><br><span class="line">    <span class="built_in">print</span>(rst.group(<span class="number">0</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="python正则表达式语法"><a href="#python正则表达式语法" class="headerlink" title="python正则表达式语法"></a>python正则表达式语法</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">.       表示任何单个字符</span><br><span class="line">[]      对**单个字符**给出取值范围</span><br><span class="line">[^]     对**单个字符**给出排除范围</span><br><span class="line">*       *前字符重复0~无限次</span><br><span class="line">+       +前字符重复1~无限次</span><br><span class="line">?       ?前字符重复0~1次</span><br><span class="line">|       左右表达式任意一个</span><br><span class="line">&#123;m&#125;     对前一个字符重复m次</span><br><span class="line">&#123;m,n&#125;   对前一个字符重复[m,n]次，&#123;:3&#125;表示[0,3]次</span><br><span class="line">^       匹配字符串开头</span><br><span class="line">$       匹配字符串结尾</span><br><span class="line">()      分组标记，内部只能使用|操作符</span><br><span class="line">\d      表示数字字符，等价于[0-9]</span><br><span class="line">\w      表示单词字符，等价于[A-Za-z0-9_]</span><br></pre></td></tr></table></figure><h2 id="regex库方法"><a href="#regex库方法" class="headerlink" title="regex库方法"></a>regex库方法</h2><ul><li><strong>re.search(pattern, string, flags&#x3D;0)</strong><br>在字符串中搜索匹配的第一个位置，返回match对象</li><li><strong>re.match(pattern, string, flags&#x3D;0)</strong><br>从字符串开始位置起匹配正则表达式，返回match对象</li><li><strong>re.findall(pattern, string, flags&#x3D;0)</strong><br>匹配所有的子串，返回列表</li><li><strong>re.split(pattern, string, maxsplit&#x3D;0, flags&#x3D;0)</strong><br>将字符串按照正则表达式子串进行分割，返回列表</li><li><strong>re.finditer(pattern, string, flags&#x3D;0)</strong><br>返回匹配的迭代类型，返回match对象</li><li><strong>re.sub(pattern, repl, string, count&#x3D;0, flags&#x3D;0)</strong><br>在字符串中替换所有匹配子串，返回字符串</li></ul><p>参数含义：</p><table><thead><tr><th align="center">参数</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">pattern</td><td align="center">正则表达式的字符串或原生字符串表示</td></tr><tr><td align="center">string</td><td align="center">待匹配字符串</td></tr><tr><td align="center">flags</td><td align="center">正则表达式使用时的控制标记</td></tr><tr><td align="center">maxsplit</td><td align="center">最大分割数，剩余部分作为最后一个元素输出</td></tr><tr><td align="center">repl</td><td align="center">替换匹配字符串的字符串</td></tr><tr><td align="center">count</td><td align="center">最大替换次数</td></tr></tbody></table><p>控制标记含义：</p><table><thead><tr><th align="center">控制标记</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">re.I re.IGNORECASE</td><td align="center">忽略正则表达式的大小写，[A‐Z]能够匹配小写字符</td></tr><tr><td align="center">re.M re.MULTILINE</td><td align="center">正则表达式中的^操作符能够将给定字符串的每行当作匹配开始</td></tr><tr><td align="center">re.S re.DOTALL</td><td align="center">正则表达式中的.操作符能够匹配所有字符，默认匹配除换行外的所有字符</td></tr></tbody></table><h2 id="match对象"><a href="#match对象" class="headerlink" title="match对象"></a>match对象</h2><p>Match对象是一次匹配的结果，包含匹配的所有信息</p><ul><li><strong>.string</strong> 待匹配的字符串</li><li><strong>.re</strong>     用于匹配的正则表达式</li><li><strong>.pos</strong>    搜索的开始位置</li><li><strong>.endpos</strong> 搜索的结束位置</li><li><strong>.group(0)</strong>   匹配的子串</li><li><strong>.start()</strong>    匹配子串在字符串中的开始位置</li><li><strong>.end()</strong>      匹配子串在字符串中的结束位置</li><li><strong>.span()</strong>     返回(.start(), .end())</li></ul><h2 id="贪婪匹配和最小匹配"><a href="#贪婪匹配和最小匹配" class="headerlink" title="贪婪匹配和最小匹配"></a>贪婪匹配和最小匹配</h2><p>对于同一个匹配子串开始位置，可能存在多个结束位置满足匹配：</p><ul><li>Re库默认采用贪婪匹配，即输出匹配最长的子串</li><li>通过在操作符后增加?变成最小匹配<ul><li>*?   前一个字符重复0~无限次，最小匹配</li><li>+?    前一个字符重复1~无限次，最小匹配</li><li>??    前一个字符重复0~1次，最小匹配</li><li>{m,n}?    前一个字符重复[m,n]次，最小匹配</li></ul></li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[\u4e00‐\u9fa5]         匹配中文字符</span><br><span class="line">^[A‐Za‐z]+$             由26个字母组成的字符串</span><br><span class="line">^‐?\d+$                 整数</span><br><span class="line">^[0‐9]*[1‐9][0‐9]*$     正整数</span><br><span class="line">(([1‐9]?\d|1\d&#123;2&#125;|2[0‐4]\d|25[0‐5]).)&#123;3&#125;([1‐9]?\d|1\d&#123;2&#125;|2[0‐4]\d|25[0‐5])  匹配IPv4地址</span><br></pre></td></tr></table></figure><p><img src="/Python%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%87%AA%E6%9F%A5/bottom.png" alt="bottom"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Python正则表达式自查&quot;&gt;&lt;a href=&quot;#Python正则表达式自查&quot; class=&quot;headerlink&quot; title=&quot;Python正则表达式自查&quot;&gt;&lt;/a&gt;Python正则表达式自查&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;正则表达式是一种针对字符串表达“简洁”和</summary>
      
    
    
    
    <category term="Python" scheme="http://bigtrex.top/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>爬虫学习记录</title>
    <link href="http://bigtrex.top/%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://bigtrex.top/%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2022-08-01T13:01:10.000Z</published>
    <updated>2022-08-05T07:39:35.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="爬虫学习记录"><a href="#爬虫学习记录" class="headerlink" title="爬虫学习记录"></a>爬虫学习记录</h1><ol><li>使用python第三方库requests库进行网页爬取<ul><li>get方法</li><li>post方法</li></ul></li><li>Fn12利用浏览器抓包工具分析<ul><li>User-Agent</li><li>Content-Type</li><li>获取网页真正请求的url</li><li>查看网页提交请求的方法</li></ul></li><li>Ajax数据分析<ul><li>Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）</li><li>页面局部刷新</li><li>利用爬虫爬取数据的第一步是<a href="#%E5%88%A4%E6%96%AD%E7%BD%91%E9%A1%B5%E6%98%AF%E5%90%A6%E9%87%87%E7%94%A8ajax">分析页面</a></li></ul></li><li>XML<ul><li>XML Extensiable Markup Language 可扩展标记语言</li><li>html -&gt; xhtml -&gt; xml</li><li>Ajax基于XML实现</li></ul></li><li>json模块(JavsScript Object Notation)<br>一种信息标记格式规范<ul><li>requests库的Response对象的json()方法返回一个json对象，类型为字典</li><li>json模块提供了4个方便的方法编码和解析json数据</li><li>json.dumps() -&gt; 将Python数据转换为json格式数据</li><li>jsom.loads() -&gt; 将json编码的字符串转换为一个Python数据结构</li><li>json.dump() -&gt; 用于文件</li><li>json.load() -&gt; 用于文件</li><li><a href="https://www.json.cn/">json数据格式化工具</a></li></ul></li><li>Python正则表达式<ul><li>进行数据解析从而实现聚焦爬虫</li></ul></li><li>bs4库<ul><li>bs4是Python独有的一种解析数据方式</li><li>基于其它语言的爬虫不支持bs4</li></ul></li></ol><h2 id="动态加载数据"><a href="#动态加载数据" class="headerlink" title="动态加载数据"></a>动态加载数据</h2><p>在对一个url发起请求时，页面中的数据可能由动态加载得到，重新对该url提交请求在抓包工具中查看对应url数据包，进一步判断请求得到的数据是否包含页面中的某些数据</p><h2 id="判断网页是否采用AJax"><a href="#判断网页是否采用AJax" class="headerlink" title="判断网页是否采用AJax"></a>判断网页是否采用AJax</h2><p>利用爬虫爬取网页数据时，首先需要分析数据到底是在服务器端组成好发回给浏览器的？还是通过AJax请求异步发送的？</p><p>AJax请求数据包在XHR选项中</p><ol><li><p>利用AJax时，网页变化时url往往不会发生变化</p></li><li><p>对于一个AJax请求，会额外返回一个X-Requested-With: XMLHttpRequest头部字段，一个普通的请求没有该字段</p></li></ol><p><img src="/%E7%88%AC%E8%99%AB%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/bottom.png" alt="bottom"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;爬虫学习记录&quot;&gt;&lt;a href=&quot;#爬虫学习记录&quot; class=&quot;headerlink&quot; title=&quot;爬虫学习记录&quot;&gt;&lt;/a&gt;爬虫学习记录&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;使用python第三方库requests库进行网页爬取&lt;ul&gt;
&lt;li&gt;get方法&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="爬虫" scheme="http://bigtrex.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>反反爬</title>
    <link href="http://bigtrex.top/%E5%8F%8D%E5%8F%8D%E7%88%AC/"/>
    <id>http://bigtrex.top/%E5%8F%8D%E5%8F%8D%E7%88%AC/</id>
    <published>2022-08-01T10:12:39.000Z</published>
    <updated>2022-08-04T12:21:56.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="反反爬总结"><a href="#反反爬总结" class="headerlink" title="反反爬总结"></a>反反爬总结</h1><p><a href="#%E7%99%BE%E5%BA%A6%E5%AE%89%E5%85%A8%E9%AA%8C%E8%AF%81">1. 百度安全验证</a></p><p><a href="#%E6%9F%90%E6%95%B0%E5%8F%8D%E7%88%AC">2. 某数反爬</a></p><h1 id="百度安全验证"><a href="#百度安全验证" class="headerlink" title="百度安全验证"></a>百度安全验证</h1><p>通常修改request的请求头载体模拟时，使用浏览器的User-Agent字段：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.77</span><br></pre></td></tr></table></figure><p>可能遭遇百度反爬拦截，自动跳转到百度安全验证</p><p><img src="/%E5%8F%8D%E5%8F%8D%E7%88%AC/%E7%99%BE%E5%BA%A6%E5%AE%89%E5%85%A8%E9%AA%8C%E8%AF%81.png" alt="百度安全验证"></p><p>常用解决方案：</p><ul><li>修改UA字段</li><li>增加更多头信息，例如Accept-Language</li></ul><h1 id="某数反爬"><a href="#某数反爬" class="headerlink" title="某数反爬"></a>某数反爬</h1><p>在练习爬取<a href="http://scxk.nmpa.gov.cn:81/xk/">化妆品生产许可信息管理服务平台</a>时遇到HTTP状态码400，打开网络检查工具会直接跳转到源代码，一种说法是陷入无限debug中（每次返回的js代码不同），也无法添加断点，该站通过AJax请求更新页面时，提交的url携带两个随机生成的参数，无法通过后端的参数验证，暂时无法破解</p><p><img src="/%E5%8F%8D%E5%8F%8D%E7%88%AC/moushu.png" alt="某数反爬随机数"></p><h2 id="一些某数逆向方法"><a href="#一些某数逆向方法" class="headerlink" title="一些某数逆向方法"></a>一些某数逆向方法</h2><ul><li>使用fiddler进行请求拦截，进行调试</li><li>使用chrome的script监听器进行调试</li><li>本地搭建环境</li></ul><p><img src="/%E5%8F%8D%E5%8F%8D%E7%88%AC/bottom.png" alt="bottom"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;反反爬总结&quot;&gt;&lt;a href=&quot;#反反爬总结&quot; class=&quot;headerlink&quot; title=&quot;反反爬总结&quot;&gt;&lt;/a&gt;反反爬总结&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;#%E7%99%BE%E5%BA%A6%E5%AE%89%E5%85%A8%E9%AA%8C%E8</summary>
      
    
    
    
    <category term="爬虫" scheme="http://bigtrex.top/categories/%E7%88%AC%E8%99%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>本地图片</title>
    <link href="http://bigtrex.top/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/"/>
    <id>http://bigtrex.top/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/</id>
    <published>2022-07-30T03:06:45.000Z</published>
    <updated>2022-07-31T14:29:18.329Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/md_icon.png" alt="本地图片"></p><p><img src="https://img-prod-cms-rt-microsoft-com.akamaized.net/cms/api/am/imageFileData/RE4wwun?ver=f5d4" alt="网络图片"></p><p><img src="/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/bottom.png" alt="bottom"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/%E6%9C%AC%E5%9C%B0%E5%9B%BE%E7%89%87/md_icon.png&quot; alt=&quot;本地图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-prod-cms-rt-microsoft-com.akamaized</summary>
      
    
    
    
    <category term="MarkDown" scheme="http://bigtrex.top/categories/MarkDown/"/>
    
    
  </entry>
  
  <entry>
    <title>MD语法自查</title>
    <link href="http://bigtrex.top/MD%E8%AF%AD%E6%B3%95%E8%87%AA%E6%9F%A5/"/>
    <id>http://bigtrex.top/MD%E8%AF%AD%E6%B3%95%E8%87%AA%E6%9F%A5/</id>
    <published>2022-07-29T13:58:54.000Z</published>
    <updated>2022-08-04T12:20:47.377Z</updated>
    
    <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="MarkDown语法自查"><a href="#MarkDown语法自查" class="headerlink" title="MarkDown语法自查"></a>MarkDown语法自查</h1><p><a href="#%E6%A0%87%E9%A2%98">1. 标题</a></p><p><a href="#%E5%88%97%E8%A1%A8">2. 列表</a></p><p><a href="#%E5%AD%97%E4%BD%93">3. 字体</a></p><p><a href="#%E9%94%9A%E7%82%B9">4. 锚点</a></p><p><a href="#%E4%BB%A3%E7%A0%81%E5%9D%97">5. 代码块</a></p><p><a href="#%E5%9B%BE%E7%89%87%E5%92%8C%E8%B6%85%E9%93%BE%E6%8E%A5">6. 图片和超链接</a></p><p><a href="#%E8%A1%A8%E6%A0%BC">7. 表格</a></p><p><a href="#%E5%BC%95%E7%94%A8">8. 引用</a></p><hr><hr><hr><h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h1 id="主标题"><a href="#主标题" class="headerlink" title="主标题"></a>主标题</h1><h2 id="副标题"><a href="#副标题" class="headerlink" title="副标题"></a>副标题</h2><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><p>有序列表：</p><ol><li>首先<ul><li>首先<ol><li>首首先</li><li>其其次</li><li>最最后</li></ol></li><li>其次</li><li>最后</li></ul></li><li>其次</li><li>最后</li></ol><p>无序列表：</p><ul><li>首先<ul><li>首先</li><li>其次</li><li>最后</li></ul></li><li>其次</li><li>最后</li></ul><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p><em>斜体</em></p><p><strong>粗体</strong></p><p><em><strong>粗斜体</strong></em></p><p><span style="color:pink">花裙子</span></p><p><del>删除线</del></p><p><del>删除线</del></p><h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><p>定位到这里</p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">age</span>):</span><br><span class="line">    <span class="keyword">return</span> age</span><br></pre></td></tr></table></figure><p><code>int a=5+9;</code></p><h1 id="图片和超链接"><a href="#图片和超链接" class="headerlink" title="图片和超链接"></a>图片和超链接</h1><p><img src="https://img-home.csdnimg.cn/images/20220729104705.jpg" alt="网络图片" title="网络图片"></p><p><a href="https://www.csdn.net/" title="前往csdn社区">csdn社区</a></p><p><a href="https://www.csdn.net/">https://www.csdn.net/</a></p><h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table><thead><tr><th>姓名</th><th align="right">年龄</th><th align="center">职业</th></tr></thead><tbody><tr><td>张三</td><td align="right">20000</td><td align="center">医生</td></tr><tr><td>李四</td><td align="right">60</td><td align="center">警察叔叔</td></tr></tbody></table><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><p>张三说：</p><blockquote><p>阿门阿前一棵葡萄树</p><blockquote><p>葡萄树说：这是不对的</p></blockquote></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;

&lt;h1 id=&quot;MarkDown语法自查&quot;&gt;&lt;a href=&quot;#MarkDown语法自查&quot; class=&quot;headerlink&quot; title=&quot;MarkDown语法自查&quot;&gt;&lt;/a&gt;Mark</summary>
      
    
    
    
    <category term="MarkDown" scheme="http://bigtrex.top/categories/MarkDown/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://bigtrex.top/hello-world/"/>
    <id>http://bigtrex.top/hello-world/</id>
    <published>2022-07-17T07:33:16.509Z</published>
    <updated>2022-07-17T07:33:16.509Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
